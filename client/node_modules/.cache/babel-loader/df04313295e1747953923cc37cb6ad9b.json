{"ast":null,"code":"import * as Yup from \"yup\";\nconst regsiterSchema = Yup.object().shape({\n  user: Yup.string().min(5, 'Username must be more than 5 character!').required('Username is required!'),\n  password: Yup.string().required('Password is required!').matches(/(?=,*[a-z])/, 'you must use at least on uppercaseletters, lowercase letters and one number').matches(/(?=,*[A-Z])/, 'you must use at least on uppercaseletters, lowercase letters and one number').matches(/(?=,*[0-9])/, 'you must use at least on uppercaseletters, lowercase letters and one number'),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password')], 'Password must match').required('Re-Enter password is required!')\n});\nconst loginSchema = Yup.object().shape({\n  user: Yup.string().min(5, 'Username must be more than 5 character!').required('Username is required!'),\n  password: Yup.string().required('Password is required!').matches(/(?=,*[a-z])/, 'you must use at least one uppercase letter, lowercase letter and one number').matches(/(?=,*[A-Z])/, 'you must use at least one uppercase letter, lowercase letter and one number').matches(/(?=,*[0-9])/, 'you must use at least one uppercase letter, lowercase letter and one number')\n});\nexport { regsiterSchema, loginSchema };","map":{"version":3,"names":["Yup","regsiterSchema","object","shape","user","string","min","required","password","matches","confirmPassword","oneOf","ref","loginSchema"],"sources":["C:/Users/swadh/OneDrive/Desktop/MERN-Stack-todo-website-master/client/src/validation/registerValidation.js"],"sourcesContent":["import * as Yup from \"yup\"\r\n\r\nconst regsiterSchema=Yup.object().shape({\r\n    user: Yup.string().min(5,'Username must be more than 5 character!').required('Username is required!'),\r\n    password: Yup.string().required('Password is required!')\r\n    .matches(/(?=,*[a-z])/,'you must use at least on uppercaseletters, lowercase letters and one number')\r\n    .matches(/(?=,*[A-Z])/,'you must use at least on uppercaseletters, lowercase letters and one number')\r\n    .matches(/(?=,*[0-9])/,'you must use at least on uppercaseletters, lowercase letters and one number'),\r\n    confirmPassword: Yup.string().oneOf([Yup.ref('password')],'Password must match').required('Re-Enter password is required!'),\r\n}\r\n)\r\nconst loginSchema=Yup.object().shape({\r\n    user: Yup.string().min(5,'Username must be more than 5 character!').required('Username is required!'),\r\n    password: Yup.string().required('Password is required!')\r\n    .matches(/(?=,*[a-z])/,'you must use at least one uppercase letter, lowercase letter and one number')\r\n    .matches(/(?=,*[A-Z])/,'you must use at least one uppercase letter, lowercase letter and one number')\r\n    .matches(/(?=,*[0-9])/,'you must use at least one uppercase letter, lowercase letter and one number'),\r\n})\r\n\r\nexport {regsiterSchema,loginSchema}"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,MAAMC,cAAc,GAACD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;EACpCC,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAmB,yCAAnB,EAA8DC,QAA9D,CAAuE,uBAAvE,CAD8B;EAEpCC,QAAQ,EAAER,GAAG,CAACK,MAAJ,GAAaE,QAAb,CAAsB,uBAAtB,EACTE,OADS,CACD,aADC,EACa,6EADb,EAETA,OAFS,CAED,aAFC,EAEa,6EAFb,EAGTA,OAHS,CAGD,aAHC,EAGa,6EAHb,CAF0B;EAMpCC,eAAe,EAAEV,GAAG,CAACK,MAAJ,GAAaM,KAAb,CAAmB,CAACX,GAAG,CAACY,GAAJ,CAAQ,UAAR,CAAD,CAAnB,EAAyC,qBAAzC,EAAgEL,QAAhE,CAAyE,gCAAzE;AANmB,CAAnB,CAArB;AASA,MAAMM,WAAW,GAACb,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;EACjCC,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAmB,yCAAnB,EAA8DC,QAA9D,CAAuE,uBAAvE,CAD2B;EAEjCC,QAAQ,EAAER,GAAG,CAACK,MAAJ,GAAaE,QAAb,CAAsB,uBAAtB,EACTE,OADS,CACD,aADC,EACa,6EADb,EAETA,OAFS,CAED,aAFC,EAEa,6EAFb,EAGTA,OAHS,CAGD,aAHC,EAGa,6EAHb;AAFuB,CAAnB,CAAlB;AAQA,SAAQR,cAAR,EAAuBY,WAAvB"},"metadata":{},"sourceType":"module"}